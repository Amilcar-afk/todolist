name: CI

on:
  push:
    branches:
      - main
      - feature/tests  # Assurez-vous que la branche est incluse
  pull_request:
    branches:
      - main
      - feature/tests  # Assurez-vous que la branche est incluse

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      APP_ENV: test
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      APP_SECRET: ${{ secrets.APP_SECRET }}
      JWT_PASSPHRASE: ${{ secrets.JWT_PASSPHRASE }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Create .env file
        run: |
          echo "APP_ENV=test" > .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "APP_SECRET=${{ secrets.APP_SECRET }}" >> .env
          echo "JWT_PASSPHRASE=${{ secrets.JWT_PASSPHRASE }}" >> .env
          echo "CORS_ALLOW_ORIGIN=${{ secrets.CORS_ALLOW_ORIGIN }}" >> .env
          echo "MAILER_DSN=${{ secrets.MAILER_DSN }}" >> .env
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
          echo "JWT_PUBLIC_KEY=${{ secrets.JWT_PUBLIC_KEY }}" >> .env
        working-directory: ./api

      - name: Start application
        run: docker-compose up -d

      - name: Install dependencies
        run: docker exec api_platform composer install

      - name: Run PHPUnit tests
        run: docker-compose run --rm test

      - name: List files in current directory
        run: ls -l
